geom_bar(position="dodge", stat="identity")
View(ys)
View(ys)
# Fee Collection Services Potential -----------------------------------------
turnover_avg <- turnover %>%
group_by(store_name, product_category, year) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(turnover_avg, aes(year, avg_gm)) + geom_boxplot(position = 'dodge') + facet_grid(scales = 'free', rows = . ~ product_category)
turnover_avg
ggplot(ys, aes(y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(yspm, aes(fill=sunday_open, y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
ggplot(yspm, aes(fill=sunday_open, y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
gm_sunday <- ys %>% group_by(sunday_open,gm) %>%
summarise(
avg_gm = mean(gm)
)
View(gm_sunday)
View(gm_sunday)
gm_sunday <- ys %>% group_by(sunday_open,product_category) %>%
summarise(
avg_gm = mean(gm)
)
gm_sunday <- ys %>% group_by(sunday_open,product_category) %>%
summarise(
avg_gm = mean(gm)
)
gm_sunday <- ys %>% group_by(sunday_open,product_category) %>%
summarise(
avg_gm = mean(gm)
)
gm_sunday <- ys %>% group_by(sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(gm_sunday, aes(y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(gm_sunday, aes(y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(ys, aes(y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(ys, aes(y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(gm_sunday, aes(y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(ys, aes(y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(gm_sunday, aes(y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
gm_mps<- ys %>% group_by(product_category,month,sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
gm_mps<- ys %>% group_by(product_category,month,sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
gm_mps<- ysp %>% group_by(product_category,month,sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
gm_mps<- yspm %>% group_by(product_category,month,sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
View(gm_mps)
View(gm_mps)
ggplot(gm_mps, aes(fill=sunday_open, y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
ggplot(gm_mps, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
ggplot(gm_s, aes(y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
gm_s <- ys %>% group_by(sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(gm_s, aes(y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(gm_s, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(gm_mps, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
# Newspaper Focus (newspaper focus ratio) --------
ggplot(ys, aes(x = round(sunday_opening_hours,1), y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
View(ys)
View(ys)
View(ysp)
View(ysp)
# Newspaper Focus (newspaper focus ratio) --------
#calculate newspaper ratio
ys$npr<- ys$newspaper_shelves/(ys$newspaper_shelves+ys$non_newspaper_shelves)
# Newspaper Focus (newspaper focus ratio) --------
#calculate newspaper ratio
ys$npr<- ys$newspaper_shelves/(ys$newspaper_shelves+ys$non_newspaper_shelves)
str(ys)
store$newspaper_shelves <- as.numeric(store$newspaper_shelves)
store$non_newspaper_shelves <- as.numeric(store$non_newspaper_shelves)
# convert store names to strings
turnover$store_name <- as.character(turnover$store_name)
costs$store_name <- as.character(costs$store_name)
# change #missing values to NA
store[store == "#MISSING"] <- NA
# change sign of costs
costs$costs <- -costs$costs
# Create Year-Store Aggregated Dataset ------------------------------------
# Aggregate data
ys_t <- turnover %>% group_by(year,store_name) %>%
summarise(
gm = sum(gm)
)
ys_c <- costs %>% group_by(year,store_name) %>%
summarise(
cost = sum(costs)
)
# Join cost and turnover
ys <- left_join(ys_t,ys_c,by=c("year","store_name"))
# Join df and store data
ys <- left_join(ys,store, by="store_name")
# Calculate net margin (Net margin = Gross margin - Non-COGS costs)
ys$nm <- ys$gm-ys$cost
# Create Year-Store-ProductCat Aggregated Dataset ------------------------
ysp_t <- turnover %>% group_by(year,store_name, product_category) %>%
summarise(
gm = sum(gm)
)
ysp <- left_join(ysp_t,store,by="store_name")
# Create Year-Store-ProductCat-Month Aggregated Dataset ------------------------
yspm <- left_join(turnover, store, by="store_name")
store %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free") +
geom_histogram()+
theme_bw() +
scale_fill_wsj()
# Descriptive statistics
dstats<-sum_stat(store, store %>%
keep(is.numeric) %>%
colnames(),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F
)
# Add gm and costs
dstats <- dstats %>%
left_join(sum_stat(turnover,
c("gm"),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F),
by="statistics") %>%
left_join(sum_stat(costs,
c("costs"),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F),
by="statistics")
# Distributions of GM by product categories and years
ggplot(ysp_t, aes(gm)) + geom_histogram(position = 'dodge') + facet_grid(year ~ product_category,scales = 'free')
# Distributions of GM by year
ggplot(ysp, aes(gm)) + geom_histogram(position = 'dodge') + facet_grid(scales = 'free', rows = . ~ year)
# Distributions of Non-COGS Costs by years
ggplot(ys_c, aes(cost)) + geom_histogram(position = 'dodge') + facet_grid(scales = 'free', rows = . ~ year)
# Select This year
ys <- filter(ys, year=="This year")
ysp <- filter(ysp, year=="This year")
yspm <- filter(yspm, year=="This year")
ggplot(ys, aes(x = round(sunday_opening_hours,1), y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
# Create Sunday open dummy variable
ys$sunday_open<-as.factor(ifelse(ys$sunday_opening_hours>0,1,0))
yspm$sunday_open<-as.factor(ifelse(yspm$sunday_opening_hours>0,1,0))
gm_s <- ys %>% group_by(sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(gm_s, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
gm_mps<- yspm %>% group_by(product_category,month,sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(gm_mps, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
# Newspaper Focus (newspaper focus ratio) --------
#calculate newspaper ratio
ys$npr<- ys$newspaper_shelves/(ys$newspaper_shelves+ys$non_newspaper_shelves)
ggplot(ys, aes(x = , y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
# Fee Collection Services Potential -----------------------------------------
# Fee Collection Services Potential -----------------------------------------
ggplot(ys, aes(x = , y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
ggplot(ys, aes(x = npr, y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
ggplot(ys, aes(x = npr, y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Newspaper focus ratio",
y = "Gross Margin",
x = "Newspaper focus ratio")
# PUDO Services -----------------------------------------------------------
gm_p<- yspm %>% group_by(product_category,month) %>%
summarise(
avg_gm = mean(gm)
)
View(gm_p)
View(gm_p)
ggplot(gm_p, aes(fill=product_category, y=avg_gm, x=product_category)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
ggplot(gm_mps, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(scales = 'free', rows = . ~ month)
ggplot(gm_p, aes(fill=product_category, y=avg_gm, x=product_category)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(scales = 'free', rows = . ~ month)
View(yspm)
View(yspm)
ggplot(gm_p, aes(fill=product_category, y=avg_gm, x=product_category)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
ggplot(gm_p, aes(fill=product_category, y=avg_gm)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
ggplot(gm_p, aes(fill=product_category, y=avg_gm, x=product_category)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
# Initialize environment --------------------------------------------------
library(dplyr)
library(readxl)
library(ggplot2)
library(ggthemes)
library(tidyverse)
library(janitor)
require(scales)
source("sum_stat.R")
rm(list=ls())
path<-"/Users/Dominik/OneDrive - Central European University/2nd_trimester/DDM/ddm_kiosk/"
# Read in data ------------------------------------------------------------
fname <- 'data/raw/Czech newspaperkiosk case dataset 20210104_v1.0.xlsx'
turnover <- read_xlsx(fname, sheet = 'Turnover') %>% clean_names()
stores <- read_xlsx(fname, sheet = 'Store data') %>% clean_names()
cost <- read_xlsx(fname, sheet = 'Costs') %>% clean_names()
write_csv(turnover,paste0(path,"data/clean/turnover.csv"))
write_csv(stores,paste0(path,"data/clean/stores.csv"))
write_csv(cost,paste0(path,"data/clean/cost.csv"))
# Data cleaning -----------------------------------------------------------
str(stores)
str(turnover)
str(cost)
# convert store_name column to string
turnover$store_name <- as.character(turnover$store_name)
cost$store_name <- as.character(cost$store_name)
stores$store_name <- as.character(stores$store_name)
# convert nominal variables to factors
stores$prague<-as.factor(stores$prague)
stores$price_category<- as.factor(stores$price_category)
stores$lottery_pos<- as.factor(stores$lottery_pos)
stores$pudo_pos<- as.factor(stores$pudo_pos)
# convert numeric variables stored as character to numeric
stores$sunday_opening_hours <- as.numeric(stores$sunday_opening_hours)
stores$real_estate_price_sqm <- as.numeric(stores$real_estate_price_sqm)
stores$x0_50m_avg <- as.numeric(stores$x0_50m_avg)
stores$x50_100m_avg <- as.numeric(stores$x50_100m_avg)
stores$x100_plusm_avg <- as.numeric(stores$x100_plusm_avg)
stores$newspaper_shelves <- as.numeric(stores$newspaper_shelves)
stores$non_newspaper_shelves <- as.numeric(stores$non_newspaper_shelves)
# replace #missing values with NA
stores[stores == "#MISSING"] <- NA
# change sign of costs
cost$costs <- -cost$costs
# change unit of measurement for gm, cost
cost$costs <- cost$costs/10^5
turnover$gm <- turnover$gm/10^5
# Create Year-Store Aggregated Dataset ------------------------------------
# Aggregate data
ys_t <- turnover %>% group_by(year,store_name) %>%
summarise(
gm = sum(gm)
)
# Join cost and turnover
ys <- left_join(ys_t,cost,by=c("year","store_name"))
# Join df and store data
ys <- left_join(ys,stores, by="store_name")
# Calculate net margin (Net margin = Gross margin - Non-COGS costs)
ys$nm <- ys$gm-ys$costs
# Create Year-Store-ProductCat Aggregated Dataset ------------------------
ysp_t <- turnover %>% group_by(year,store_name, product_category) %>%
summarise(
gm = sum(gm)
)
ysp <- left_join(ysp_t,stores,by="store_name")
# Create Year-Store-ProductCat-Month level Dataset ------------------------
yspm <- left_join(turnover, stores, by="store_name")
# General EDA ----------------------------------------------------------------------
stores %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free") +
geom_histogram()+
theme_bw() +
scale_fill_wsj()
# Descriptive statistics
dstats<-sum_stat(stores, stores %>%
keep(is.numeric) %>%
colnames(),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F
) %>%
left_join(sum_stat(turnover,
c("gm"),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F),
by="statistics") %>%
left_join(sum_stat(cost,
c("costs"),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F),
by="statistics")
# Distributions of GM by product categories and years
ggplot(ysp_t, aes(gm)) + geom_histogram(position = 'dodge') + facet_grid(year ~ product_category,scales = 'free')
# Distributions of GM by year
ggplot(ys, aes(gm)) + geom_histogram(position = 'dodge') + facet_grid(scales = 'free', rows = . ~ year)
# Distributions of Non-COGS Costs by years
ggplot(cost, aes(costs)) + geom_histogram(position = 'dodge') + facet_grid(scales = 'free', rows = . ~ year)
# Cost - Gross Margin Scatterplot
suspicous <- subset(ys, costs<0)
ggplot(ys , aes(x = costs, y = gm)) +
geom_point() +
geom_point(data=suspicous, colour="red")+
geom_text(data=suspicous, label="Error?", vjust=-1, hjust=0.25, color="red")+
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x ) +
labs( title = "Relationship between Non-COGS Costs and Gross Margin",
y = "Gross Margin (100K)",
x = "Costs (100K)")+
facet_grid(scales = 'free', rows = . ~ year)
# Select This year
ys <- filter(ys, year=="This year")
ysp <- filter(ysp, year=="This year")
yspm <- filter(yspm, year=="This year")
# Weekend Opening Hours ------------------------
ggplot(ys, aes(x = round(sunday_opening_hours,1), y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin (100K)",
x = "Sunday Opening Hours")
# Create Sunday open dummy variable
ys$sunday_open<-as.factor(ifelse(ys$sunday_opening_hours>0,1,0))
yspm$sunday_open<-as.factor(ifelse(yspm$sunday_opening_hours>0,1,0))
gm_s <- ys %>% group_by(sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(gm_s, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
gm_mps<- yspm %>% group_by(product_category,month,sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(gm_mps, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
# PUDO Services -----------------------------------------------------------
gm_p<- yspm %>% group_by(product_category,month) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(gm_p, aes(fill=product_category, y=avg_gm, x=product_category)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')+
theme(axis.text.x=element_blank(),
legend.position = "none")
# Newspaper Focus (newspaper focus ratio) --------
# calculate newspaper ratio
ys$npr<- ys$newspaper_shelves/(ys$newspaper_shelves+ys$non_newspaper_shelves)
ggplot(ys, aes(x = npr, y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Newspaper focus ratio",
y = "Gross Margin (100K)",
x = "Newspaper focus ratio")
ggplot(ys, aes(x = npr, y = nm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Newspaper focus ratio",
y = "Net Margin (100K)",
x = "Newspaper focus ratio")
length(stores[stores$location=="Prague",])
length(stores[stores$location=="Prague",])/
length(stores)
length(stores[stores$location=="Prague",])/
length(stores)
length(stores[stores$location=="Prague",])/
dim(stores)
length(stores[stores$location=="Prague",])/
nrow(stores)
length(stores[stores$location=="Prague",])/
nrow(stores)
nrow(stores)
nrow(stores[stores$location=="Prague",])
nrow(stores[stores$location=="Prague",])
stores[stores$location=="Prague",])
stores[stores$location=="Prague",]
stores[stores$location=="Prague",]
View(stores)
View(stores)
stores[stores$prague==1,]
nrow(stores[stores$prague==1,])
nrow(stores[stores$prague==1,])/nrow(stores)
stores %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free") +
geom_histogram()+
theme_bw() +
scale_fill_wsj()
stores %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_grid(~key, scales = "free") +
geom_histogram()+
theme_bw() +
scale_fill_wsj()
stores %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free") +
geom_histogram()+
theme_bw() +
scale_fill_wsj()
stores %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free", ncol = 3) +
geom_histogram()+
theme_bw() +
scale_fill_wsj()
stores %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free", ncol = 4) +
geom_histogram()+
theme_bw() +
scale_fill_wsj()
ggsave(p1, filename = paste0(path,"out/store_histograms.png"),height = 10, width = 5)
p1<-stores %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free") +
geom_histogram()+
theme_bw() +
scale_fill_wsj()
p1
p1<-stores %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free",ncol = 3) +
geom_histogram()+
theme_bw() +
scale_fill_wsj()
p1
ggsave(p1, filename = paste0(path,"out/store_histograms.png"),height = 10, width = 5)
