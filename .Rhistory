colnames(),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F
)
# Add gm and costs
dstats <- dstats %>%
left_join(sum_stat(turnover,
c("gm"),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F),
by="statistics") %>%
left_join(sum_stat(costs,
c("costs"),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F),
by="statistics")
# Distributions of GM by product categories and years
ggplot(ysp_t, aes(gm)) + geom_histogram(position = 'dodge') + facet_grid(year ~ product_category,scales = 'free')
# Distributions of GM by year
ggplot(ysp, aes(gm)) + geom_histogram(position = 'dodge') + facet_grid(scales = 'free', rows = . ~ year)
# Distributions of Non-COGS Costs by years
ggplot(ys_c, aes(cost)) + geom_histogram(position = 'dodge') + facet_grid(scales = 'free', rows = . ~ year)
# Select This year
ys <- filter(ys, year=="This year")
ysp <- filter(ysp, year=="This year")
# Weekend Opening Hours ------------------------
ggplot(ys, aes(x = sunday_opening_hours, y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "",
y = "Unemployment (%)",
x = "Inflation (%)")
# PUDO Services -----------------------------------------------------------
# Newspaper Focus (newspaper focus ratio) --------
# Fee Collection Services Potential -----------------------------------------
source("sum_stat.R")
# Descriptive statistics
dstats<-sum_stat(store, store %>%
keep(is.numeric) %>%
colnames(),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F
)
# Add gm and costs
dstats <- dstats %>%
left_join(sum_stat(turnover,
c("gm"),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F),
by="statistics") %>%
left_join(sum_stat(costs,
c("costs"),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F),
by="statistics")
View(turnover)
View(turnover)
# Distributions of GM by product categories and years
ggplot(ysp_t, aes(gm)) + geom_histogram(position = 'dodge') + facet_grid(year ~ product_category,scales = 'free')
ggplot(ys, aes(x = sunday_opening_hours, y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "",
y = "Unemployment (%)",
x = "Inflation (%)")
ggplot(ys, aes(x = round(sunday_opening_hours,1), y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "",
y = "Unemployment (%)",
x = "Inflation (%)")
str(ys)
type.convert(store)
str(store)
type.convert(store)
costs <- read_xlsx(fname, sheet = 'Costs') %>% clean_names() %>% mutate(costs = -costs)
store <- read_xlsx(fname, sheet = 'Store data') %>% clean_names()
str(store)
turnover <- read_excel(fname, sheet = 'Turnover') %>% clean_names() %>% mutate(store_name = as.factor(store_name))
store <- read_xlsx(fname, sheet = 'Store data') %>% clean_names()
costs <- read_xlsx(fname, sheet = 'Costs') %>% clean_names() %>% mutate(costs = -costs)
# convert nominal variables to factors
store$prague<-as.factor(store$prague)
store$price_category<- as.factor(store$price_category)
store$lottery_pos<- as.factor(store$lottery_pos)
store$pudo_pos<- as.factor(store$pudo_pos)
# convert numeric variables stored as character to numeric
store$sunday_opening_hours <- as.numeric(store$sunday_opening_hours)
store$real_estate_price_sqm <- as.numeric(store$real_estate_price_sqm)
store$x0_50m_avg <- as.numeric(store$x0_50m_avg)
store$x50_100m_avg <- as.numeric(store$x50_100m_avg)
store$x100_plusm_avg <- as.numeric(store$x100_plusm_avg)
# convert store names to strings
turnover$store_name <- as.character(turnover$store_name)
costs$store_name <- as.character(costs$store_name)
# change #missing values to NA
store[store == "#MISSING"] <- NA
# round numbers
# change sign of costs
costs$costs <- -costs$costs
# Create Year-Store Aggregated Dataset ------------------------------------
# Aggregate data
ys_t <- turnover %>% group_by(year,store_name) %>%
summarise(
gm = sum(gm)
)
ys_c <- costs %>% group_by(year,store_name) %>%
summarise(
cost = sum(costs)
)
# Join cost and turnover
ys <- left_join(ys_t,ys_c,by=c("year","store_name"))
# Join df and store data
ys <- left_join(ys,store, by="store_name")
# Calculate net margin (Net margin = Gross margin - Non-COGS costs)
ys$nm <- ys$gm-ys$cost
# Create Year-Store-ProductCat Aggregated Dataset ------------------------
ysp_t <- turnover %>% group_by(year,store_name, product_category) %>%
summarise(
gm = sum(gm)
)
ysp <- left_join(ysp_t,store,by="store_name")
# General EDA ----------------------------------------------------------------------
store %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free") +
geom_histogram()+
theme_bw() +
scale_fill_wsj()
# Descriptive statistics
dstats<-sum_stat(store, store %>%
keep(is.numeric) %>%
colnames(),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F
)
# Add gm and costs
dstats <- dstats %>%
left_join(sum_stat(turnover,
c("gm"),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F),
by="statistics") %>%
left_join(sum_stat(costs,
c("costs"),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F),
by="statistics")
# Distributions of GM by product categories and years
ggplot(ysp_t, aes(gm)) + geom_histogram(position = 'dodge') + facet_grid(year ~ product_category,scales = 'free')
# Distributions of GM by year
ggplot(ysp, aes(gm)) + geom_histogram(position = 'dodge') + facet_grid(scales = 'free', rows = . ~ year)
# Distributions of Non-COGS Costs by years
ggplot(ys_c, aes(cost)) + geom_histogram(position = 'dodge') + facet_grid(scales = 'free', rows = . ~ year)
# Select This year
ys <- filter(ys, year=="This year")
ysp <- filter(ysp, year=="This year")
# Weekend Opening Hours ------------------------
ggplot(ys, aes(x = round(sunday_opening_hours,1), y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "",
y = "Unemployment (%)",
x = "Inflation (%)")
ggplot(ys, aes(x = round(sunday_opening_hours,1), y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "",
y = "Gross Margin",
x = "Sunday Opening Hours")
ggplot(ys, aes(x = round(sunday_opening_hours,1), y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
ggplot(ys, aes(x = round(sunday_opening_hours,1), y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
# Create sunday open dummy variable
ys$sunday_open<-
lapply(ys$sunday_opening_hours,function(x){
if(x>0){
1}
else{0}
})
NA>0
NA>0
# Create sunday open dummy variable
ys$sunday_open<-ifelse(ys$sunday_opening_hours>0,1,0)
View(ys)
View(ys)
ggplot(ys, aes(gm,sunday_open)) + geom_bar(position = 'dodge') + facet_grid(scales = 'free')
ggplot(ys, aes(gm)) + geom_bar(position = 'dodge') + facet_grid(scales = 'free')
ggplot(ys) + geom_bar(aes(gm), position = 'dodge') + facet_grid(scales = 'free')
ys
ggplot(ys) + geom_bar(aes(gm), position = 'dodge')
ggplot(ys) + geom_bar(aes(gm), position = 'dodge')
ggplot(ys) + geom_bar(aes(gm), position = 'dodge')
ggplot(ys) + geom_bar(aes(sunday_open,gm), position = 'dodge')
ggplot(ys, aes(y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(ys, aes(x = round(sunday_opening_hours,1), y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
# Create Year-Store-ProductCat-Month Aggregated Dataset ------------------------
yspm <- left_join(turnover, store, by="store_name")
View(yspm)
View(yspm)
yspm <- filter(yspm, year=="This year")
View(yspm)
View(yspm)
ggplot(yspm, aes(fill=sunday_open, y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(month ~ product_category,scales = 'free')
yspm$sunday_open<-ifelse(yspm$sunday_opening_hours>0,1,0)
ggplot(yspm, aes(fill=sunday_open, y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(month ~ product_category,scales = 'free')
ggplot(yspm, aes(fill=sunday_open, y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
str(yspm)
# Create sunday open dummy variable
ys$sunday_open<-as.factor(ifelse(ys$sunday_opening_hours>0,1,0))
yspm$sunday_open<-as.factor(ifelse(yspm$sunday_opening_hours>0,1,0))
ggplot(yspm, aes(fill=sunday_open, y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
# Distributions of GM by product categories and years
ggplot(ysp_t, aes(gm)) + geom_histogram(position = 'dodge') + facet_grid(year ~ product_category,scales = 'free')
ggplot(ys, aes(y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
View(ys)
View(ys)
# Fee Collection Services Potential -----------------------------------------
turnover_avg <- turnover %>%
group_by(store_name, product_category, year) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(turnover_avg, aes(year, avg_gm)) + geom_boxplot(position = 'dodge') + facet_grid(scales = 'free', rows = . ~ product_category)
turnover_avg
ggplot(ys, aes(y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(yspm, aes(fill=sunday_open, y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
ggplot(yspm, aes(fill=sunday_open, y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
gm_sunday <- ys %>% group_by(sunday_open,gm) %>%
summarise(
avg_gm = mean(gm)
)
View(gm_sunday)
View(gm_sunday)
gm_sunday <- ys %>% group_by(sunday_open,product_category) %>%
summarise(
avg_gm = mean(gm)
)
gm_sunday <- ys %>% group_by(sunday_open,product_category) %>%
summarise(
avg_gm = mean(gm)
)
gm_sunday <- ys %>% group_by(sunday_open,product_category) %>%
summarise(
avg_gm = mean(gm)
)
gm_sunday <- ys %>% group_by(sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(gm_sunday, aes(y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(gm_sunday, aes(y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(ys, aes(y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(ys, aes(y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(gm_sunday, aes(y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(ys, aes(y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(gm_sunday, aes(y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
gm_mps<- ys %>% group_by(product_category,month,sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
gm_mps<- ys %>% group_by(product_category,month,sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
gm_mps<- ysp %>% group_by(product_category,month,sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
gm_mps<- yspm %>% group_by(product_category,month,sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
View(gm_mps)
View(gm_mps)
ggplot(gm_mps, aes(fill=sunday_open, y=gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
ggplot(gm_mps, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
ggplot(gm_s, aes(y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
gm_s <- ys %>% group_by(sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(gm_s, aes(y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(gm_s, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
ggplot(gm_mps, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
# Newspaper Focus (newspaper focus ratio) --------
ggplot(ys, aes(x = round(sunday_opening_hours,1), y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
View(ys)
View(ys)
View(ysp)
View(ysp)
# Newspaper Focus (newspaper focus ratio) --------
#calculate newspaper ratio
ys$npr<- ys$newspaper_shelves/(ys$newspaper_shelves+ys$non_newspaper_shelves)
# Newspaper Focus (newspaper focus ratio) --------
#calculate newspaper ratio
ys$npr<- ys$newspaper_shelves/(ys$newspaper_shelves+ys$non_newspaper_shelves)
str(ys)
store$newspaper_shelves <- as.numeric(store$newspaper_shelves)
store$non_newspaper_shelves <- as.numeric(store$non_newspaper_shelves)
# convert store names to strings
turnover$store_name <- as.character(turnover$store_name)
costs$store_name <- as.character(costs$store_name)
# change #missing values to NA
store[store == "#MISSING"] <- NA
# change sign of costs
costs$costs <- -costs$costs
# Create Year-Store Aggregated Dataset ------------------------------------
# Aggregate data
ys_t <- turnover %>% group_by(year,store_name) %>%
summarise(
gm = sum(gm)
)
ys_c <- costs %>% group_by(year,store_name) %>%
summarise(
cost = sum(costs)
)
# Join cost and turnover
ys <- left_join(ys_t,ys_c,by=c("year","store_name"))
# Join df and store data
ys <- left_join(ys,store, by="store_name")
# Calculate net margin (Net margin = Gross margin - Non-COGS costs)
ys$nm <- ys$gm-ys$cost
# Create Year-Store-ProductCat Aggregated Dataset ------------------------
ysp_t <- turnover %>% group_by(year,store_name, product_category) %>%
summarise(
gm = sum(gm)
)
ysp <- left_join(ysp_t,store,by="store_name")
# Create Year-Store-ProductCat-Month Aggregated Dataset ------------------------
yspm <- left_join(turnover, store, by="store_name")
store %>%
keep(is.numeric) %>%
gather() %>%
ggplot(aes(value)) +
facet_wrap(~key, scales = "free") +
geom_histogram()+
theme_bw() +
scale_fill_wsj()
# Descriptive statistics
dstats<-sum_stat(store, store %>%
keep(is.numeric) %>%
colnames(),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F
)
# Add gm and costs
dstats <- dstats %>%
left_join(sum_stat(turnover,
c("gm"),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F),
by="statistics") %>%
left_join(sum_stat(costs,
c("costs"),
c('mean','median','min','max','1st_qu.','3rd_qu','sd','range'),
num_obs = F),
by="statistics")
# Distributions of GM by product categories and years
ggplot(ysp_t, aes(gm)) + geom_histogram(position = 'dodge') + facet_grid(year ~ product_category,scales = 'free')
# Distributions of GM by year
ggplot(ysp, aes(gm)) + geom_histogram(position = 'dodge') + facet_grid(scales = 'free', rows = . ~ year)
# Distributions of Non-COGS Costs by years
ggplot(ys_c, aes(cost)) + geom_histogram(position = 'dodge') + facet_grid(scales = 'free', rows = . ~ year)
# Select This year
ys <- filter(ys, year=="This year")
ysp <- filter(ysp, year=="This year")
yspm <- filter(yspm, year=="This year")
ggplot(ys, aes(x = round(sunday_opening_hours,1), y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
# Create Sunday open dummy variable
ys$sunday_open<-as.factor(ifelse(ys$sunday_opening_hours>0,1,0))
yspm$sunday_open<-as.factor(ifelse(yspm$sunday_opening_hours>0,1,0))
gm_s <- ys %>% group_by(sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(gm_s, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity")
gm_mps<- yspm %>% group_by(product_category,month,sunday_open) %>%
summarise(
avg_gm = mean(gm)
)
ggplot(gm_mps, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
# Newspaper Focus (newspaper focus ratio) --------
#calculate newspaper ratio
ys$npr<- ys$newspaper_shelves/(ys$newspaper_shelves+ys$non_newspaper_shelves)
ggplot(ys, aes(x = , y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
# Fee Collection Services Potential -----------------------------------------
# Fee Collection Services Potential -----------------------------------------
ggplot(ys, aes(x = , y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
ggplot(ys, aes(x = npr, y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Sunday Opening Hours",
y = "Gross Margin",
x = "Sunday Opening Hours")
ggplot(ys, aes(x = npr, y = gm)) +
geom_point() +
theme_bw() +
geom_smooth(method="loess" , formula = y ~ x )+
labs( title = "Pattern of association between Gross Margin and Newspaper focus ratio",
y = "Gross Margin",
x = "Newspaper focus ratio")
# PUDO Services -----------------------------------------------------------
gm_p<- yspm %>% group_by(product_category,month) %>%
summarise(
avg_gm = mean(gm)
)
View(gm_p)
View(gm_p)
ggplot(gm_p, aes(fill=product_category, y=avg_gm, x=product_category)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
ggplot(gm_mps, aes(fill=sunday_open, y=avg_gm, x=sunday_open)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(scales = 'free', rows = . ~ month)
ggplot(gm_p, aes(fill=product_category, y=avg_gm, x=product_category)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(scales = 'free', rows = . ~ month)
View(yspm)
View(yspm)
ggplot(gm_p, aes(fill=product_category, y=avg_gm, x=product_category)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
ggplot(gm_p, aes(fill=product_category, y=avg_gm)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
ggplot(gm_p, aes(fill=product_category, y=avg_gm, x=product_category)) +
geom_bar(position="dodge", stat="identity") +
facet_grid(product_category ~ month,scales = 'free')
